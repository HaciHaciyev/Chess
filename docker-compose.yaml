services:
  chessland:
    container_name: chessland
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.native-micro
    ports:
      - "8080:8080"
    depends_on:
      datasource:
        condition: service_healthy
    networks:
      - chess
    restart: unless-stopped
    command: ["sh", "-c", "sleep 30 && /app/chessland"]

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - app-tier
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  datasource:
    container_name: chess-history
    image: postgres:16.0
    env_file:
      - infrastructure.env
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - chess
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  datasource-administration:
    container_name: chess-administration
    image: dpage/pgadmin4
    env_file:
      - pgadmin.env
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - chess
    restart: unless-stopped

networks:
  chess:
    driver: bridge

volumes:
  postgres:
  pgadmin: